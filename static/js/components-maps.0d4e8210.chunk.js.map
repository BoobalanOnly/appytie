{"version":3,"sources":["views/app/ui/components/maps.js","containers/navs/Breadcrumb.js"],"names":["MapWithAMarker","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","position","MapsUi","match","xxs","heading","className","id","googleMapURL","loadingElement","containerElement","mapElement","query","lang","defaultState","center","zoom","defaultGeometry","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","index","active","to","BreadcrumbContainer"],"mappings":"kHAAA,wGAgBMA,EAAiBC,uBACrBC,yBAAc,kBACZ,cAAC,YAAD,CAAWC,YAAa,EAAGC,cAAe,CAAEC,KAAM,OAAQC,IAAK,SAA/D,SACE,cAAC,SAAD,CAAQC,SAAU,CAAEF,KAAM,OAAQC,IAAK,iBAoD9BE,UA/CA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,IAAI,KAAX,UACE,cAAC,IAAD,CAAYC,QAAQ,YAAYF,MAAOA,IACvC,cAAC,IAAD,CAAWG,UAAU,cAGzB,cAAC,IAAD,UACE,eAAC,IAAD,CAAOF,IAAI,KAAX,UACE,cAAC,IAAD,CAAME,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAcC,GAAG,kBAEnB,cAACb,EAAD,CACEc,aAAa,gIACbC,eAAgB,qBAAKH,UAAU,aAC/BI,iBAAkB,qBAAKJ,UAAU,aACjCK,WAAY,qBAAKL,UAAU,oBAKjC,cAAC,IAAD,CAAMA,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAcC,GAAG,kBAEnB,qBAAKD,UAAU,WAAf,SACE,cAAC,IAAD,CAAOM,MAAO,CAAEC,KAAM,SAAtB,SACE,cAAC,IAAD,CACEP,UAAU,WACVQ,aAAc,CAAEC,OAAQ,EAAE,OAAQ,SAAUC,KAAM,GAFpD,SAIE,cAAC,IAAD,CAAWC,gBAAiB,EAAE,OAAQ,gC,gCC5D1D,2DAOMC,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcb,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUY,MAG7BE,EAAS,SAACC,EAAMH,GACpB,OAAOG,EAAKC,MAAMJ,GAAK,GAAKA,GAgBxBK,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZnB,MACNmB,KAAKG,OAAO,GAC3BC,EAAQJ,EAAKC,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAACC,GAAD,OAA2B,IAApBA,EAAEF,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYtB,UAAU,gEAAtB,SACGoB,EAAMK,KAAI,SAACZ,EAAKa,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQP,EAAMC,SAAWK,EAAQ,EAA7D,SACGN,EAAMC,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMb,EAAOC,EAAMH,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIa,WAgBlBG,IAxCa,SAAC,GAAwB,IAAtB9B,EAAqB,EAArBA,QAASF,EAAY,EAAZA,MACtC,OACE,qCACGE,GACC,6BACE,cAAC,IAAD,CAAcE,GAAIF,MAGtB,cAACmB,EAAD,CAAiBrB,MAAOA","file":"static/js/components-maps.0d4e8210.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from 'react-google-maps';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\n\nconst MapWithAMarker = withScriptjs(\n  withGoogleMap(() => (\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n      <Marker position={{ lat: -34.397, lng: 150.644 }} />\n    </GoogleMap>\n  ))\n);\n\nconst MapsUi = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.maps\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"maps.google\" />\n              </CardTitle>\n              <MapWithAMarker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCO8MfadmlotuuHC8wmjwL_46I5QAMIiRU&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div className=\"map-item\" />}\n                containerElement={<div className=\"map-item\" />}\n                mapElement={<div className=\"map-item\" />}\n              />\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"maps.yandex\" />\n              </CardTitle>\n              <div className=\"map-item\">\n                <YMaps query={{ lang: 'en-US' }}>\n                  <Map\n                    className=\"map-item\"\n                    defaultState={{ center: [-34.397, 150.644], zoom: 9 }}\n                  >\n                    <Placemark defaultGeometry={[-34.397, 150.644]} />\n                  </Map>\n                </YMaps>\n              </div>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default MapsUi;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}