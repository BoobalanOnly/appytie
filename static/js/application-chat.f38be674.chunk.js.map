{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","containers/applications/ChatApplicationMenu.js","components/applications/ChatHeading.js","components/applications/MessageCard.js","components/applications/SaySomething.js","views/app/applications/chat.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/CardHeader.js","components/common/ApplicationMenu.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","injectIntl","connect","chatApp","contacts","allContacts","conversations","loadingConversations","loadingContacts","currentUser","changeConversationAction","changeConversation","createConversationAction","createConversation","searchContactAction","searchContact","intl","activeTab","toggleAppMenu","useState","searchKey","setSearchKey","handleSearchContact","keyword","length","messages","ApplicationMenu","CardHeader","Nav","tabs","NavItem","to","location","classnames","active","onClick","tab","IntlMessages","id","type","placeholder","value","onChange","e","target","TabContent","TabPane","tabId","options","suppressScrollX","wheelPropagation","map","item","index","otherUser","find","u","users","x","selectedUserId","alt","name","src","thumb","lastMessageTime","filter","userId","includes","ChatHeading","lastSeenDate","memo","MessageCard","sender","currentUserid","time","text","SaySomething","messageInput","handleChatInputPress","handleChatInputChange","handleSendButtonClick","Input","onKeyPress","Button","selectedUser","getContactsAction","getContacts","getConversationsAction","getConversations","addMessageToConversationAction","addMessageToConversation","setActiveTab","setMessageInput","scrollBarRef","useRef","useEffect","document","classList","add","remove","focusScrollBottom","setTimeout","current","_ps","element","scrollTop","contentHeight","selectedConversation","Row","xxs","key","TabContext","createContext","any","_Component","_this","call","this","state","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","_ref","children","containerRef","isOpen","setIsOpen","handleDocumentClick","container","contains","forEach","event","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/application-chat.f38be674.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Nav, TabContent, TabPane, CardHeader, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport ApplicationMenu from '../../components/common/ApplicationMenu';\n\nimport {\n  changeConversation,\n  createConversation,\n  searchContact,\n} from '../../redux/actions';\n\nconst ChatApplicationMenu = ({\n  intl,\n  activeTab,\n  toggleAppMenu,\n  contacts,\n  allContacts,\n  conversations,\n  loadingConversations,\n  loadingContacts,\n  currentUser,\n\n  changeConversationAction,\n  createConversationAction,\n  searchContactAction,\n}) => {\n  const [searchKey, setSearchKey] = useState('');\n\n  const handleSearchContact = (keyword) => {\n    setSearchKey(keyword);\n\n    if (keyword.length > 0) {\n      if (activeTab !== 'contacts') {\n        toggleAppMenu('contacts');\n      }\n      searchContactAction(keyword);\n    } else {\n      searchContactAction('');\n    }\n  };\n\n  const toggleMenu = (tab) => {\n    if (activeTab !== tab) {\n      toggleAppMenu(tab);\n    }\n    if (tab === 'messages') {\n      handleSearchContact('');\n    }\n  };\n\n  const handleConversationClick = (e, selectedUserId) => {\n    changeConversationAction(selectedUserId);\n    handleSearchContact('');\n  };\n\n  const handleContactClick = (userId) => {\n    if (activeTab !== 'messages') {\n      toggleAppMenu('messages');\n      searchContactAction('');\n    }\n\n    const conversation = conversations.find(\n      (x) => x.users.includes(currentUser.id) && x.users.includes(userId)\n    );\n    if (conversation) {\n      changeConversationAction(userId);\n    } else {\n      createConversationAction(currentUser.id, userId, conversations);\n      changeConversationAction(userId);\n    }\n  };\n\n  const { messages } = intl;\n\n  return (\n    <ApplicationMenu>\n      <CardHeader className=\"pl-0 pr-0\">\n        <Nav tabs className=\"card-header-tabs ml-0 mr-0\">\n          <NavItem className=\"w-50 text-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              className={classnames({\n                active: activeTab === 'messages',\n                'nav-link': true,\n              })}\n              onClick={() => toggleMenu('messages')}\n            >\n              <IntlMessages id=\"chat.messages\" />\n            </NavLink>\n          </NavItem>\n          <NavItem className=\"w-50 text-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              className={classnames({\n                active: activeTab === 'contacts',\n                'nav-link': true,\n              })}\n              onClick={() => toggleAppMenu('contacts')}\n            >\n              <IntlMessages id=\"chat.contacts\" />\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </CardHeader>\n\n      <div className=\"pt-4 pr-4 pl-4 pb-0\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control rounded\"\n            placeholder={messages['menu.search']}\n            value={searchKey}\n            onChange={(e) => handleSearchContact(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <TabContent activeTab={activeTab} className=\"chat-app-tab-content\">\n        <TabPane tabId=\"messages\" className=\"chat-app-tab-pane\">\n          <PerfectScrollbar\n            options={{ suppressScrollX: true, wheelPropagation: false }}\n          >\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\n              {loadingContacts &&\n                loadingConversations &&\n                conversations.map((item, index) => {\n                  const otherUser = allContacts.find(\n                    (u) => u.id === item.users.find((x) => x !== currentUser.id)\n                  );\n                  return (\n                    <div\n                      key={index}\n                      className=\"d-flex flex-row mb-1 border-bottom pb-3 mb-3\"\n                    >\n                      <NavLink\n                        className=\"d-flex\"\n                        to=\"#\"\n                        location={{}}\n                        onClick={(e) =>\n                          handleConversationClick(e, otherUser.id)\n                        }\n                      >\n                        <img\n                          alt={otherUser.name}\n                          src={otherUser.thumb}\n                          className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n                        />\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                            <div className=\"min-width-zero\">\n                              <p className=\" mb-0 truncate\">{otherUser.name}</p>\n                              <p className=\"mb-1 text-muted text-small\">\n                                {item.lastMessageTime}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </NavLink>\n                    </div>\n                  );\n                })}\n            </div>\n          </PerfectScrollbar>\n        </TabPane>\n        <TabPane tabId=\"contacts\" className=\"chat-app-tab-pane\">\n          <PerfectScrollbar\n            options={{ suppressScrollX: true, wheelPropagation: false }}\n          >\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\n              {loadingContacts &&\n                contacts\n                  .filter((x) => x.id !== currentUser.id)\n                  .map((item, index) => {\n                    return (\n                      <div\n                        key={index}\n                        className=\"d-flex flex-row mb-3 border-bottom pb-3\"\n                      >\n                        <NavLink\n                          className=\"d-flex\"\n                          to=\"#\"\n                          location={{}}\n                          onClick={() => handleContactClick(item.id)}\n                        >\n                          <img\n                            alt={item.name}\n                            src={item.thumb}\n                            className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n                          />\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                              <div className=\"min-width-zero\">\n                                <p className=\"mb-0 truncate\">{item.name}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </NavLink>\n                      </div>\n                    );\n                  })}\n            </div>\n          </PerfectScrollbar>\n        </TabPane>\n      </TabContent>\n    </ApplicationMenu>\n  );\n};\n\nconst mapStateToProps = ({ chatApp }) => {\n  const {\n    contacts,\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n  } = chatApp;\n  return {\n    contacts,\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    changeConversationAction: changeConversation,\n    createConversationAction: createConversation,\n    searchContactAction: searchContact,\n  })(ChatApplicationMenu)\n);\n","import React from 'react';\n\nconst ChatHeading = ({ name, thumb, lastSeenDate }) => {\n  return (\n    <>\n      <div className=\"d-flex flex-row chat-heading\">\n        <div className=\"d-flex\">\n          <img\n            alt={name}\n            src={thumb}\n            className=\"img-thumbnail border-0 rounded-circle ml-0 mr-4 list-thumbnail align-self-center small\"\n          />\n        </div>\n        <div className=\" d-flex min-width-zero\">\n          <div className=\"card-body pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n            <div className=\"min-width-zero\">\n              <div>\n                <p className=\"list-item-heading mb-1 truncate \">{name}</p>\n              </div>\n              <p className=\"mb-0 text-muted text-small\">\n                {lastSeenDate === '0' ? '-' : lastSeenDate}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"separator mb-5\" />\n    </>\n  );\n};\n\nexport default React.memo(ChatHeading);\n","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\n\nconst MessageCard = ({ sender, item, currentUserid }) => {\n  return (\n    <>\n      <Card\n        className={`d-inline-block mb-3 float-${\n          item.sender !== currentUserid ? 'left' : 'right'\n        }`}\n      >\n        <div className=\"position-absolute  pt-1 pr-2 r-0\">\n          <span className=\"text-extra-small text-muted\">{item.time}</span>\n        </div>\n        <CardBody>\n          <div className=\"d-flex flex-row pb-1\">\n            <img\n              alt={sender.name}\n              src={sender.thumb}\n              className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n            />\n            <div className=\" d-flex flex-grow-1 min-width-zero\">\n              <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                <div className=\"min-width-zero\">\n                  <p className=\"mb-0 truncate list-item-heading\">\n                    {sender.name}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chat-text-left\">\n            <p className=\"mb-0 text-semi-muted\">{item.text}</p>\n          </div>\n        </CardBody>\n      </Card>\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\nexport default React.memo(MessageCard);\n","import React from 'react';\nimport { Input, Button } from 'reactstrap';\n\nconst SaySomething = ({\n  placeholder,\n  messageInput,\n  handleChatInputPress,\n  handleChatInputChange,\n  handleSendButtonClick,\n}) => {\n  return (\n    <div className=\"chat-input-container d-flex justify-content-between align-items-center\">\n      <Input\n        className=\"form-control flex-grow-1\"\n        type=\"text\"\n        placeholder={placeholder}\n        value={messageInput}\n        onKeyPress={(e) => handleChatInputPress(e)}\n        onChange={(e) => handleChatInputChange(e)}\n      />\n      <div>\n        <Button outline color=\"primary\" className=\"icon-button large ml-1\">\n          <i className=\"simple-icon-paper-clip\" />\n        </Button>\n\n        <Button\n          color=\"primary\"\n          className=\"icon-button large ml-1\"\n          onClick={() => handleSendButtonClick()}\n        >\n          <i className=\"simple-icon-arrow-right\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default React.memo(SaySomething);\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Row } from 'reactstrap';\n\nimport { Colxx } from '../../../components/common/CustomBootstrap';\n\nimport {\n  getContacts,\n  getConversations,\n  changeConversation,\n  addMessageToConversation,\n} from '../../../redux/actions';\nimport ChatApplicationMenu from '../../../containers/applications/ChatApplicationMenu';\nimport ChatHeading from '../../../components/applications/ChatHeading';\nimport MessageCard from '../../../components/applications/MessageCard';\nimport SaySomething from '../../../components/applications/SaySomething';\n\nconst ChatApp = ({\n  intl,\n  allContacts,\n  conversations,\n  loadingConversations,\n  loadingContacts,\n  currentUser,\n  selectedUser,\n  selectedUserId,\n\n  getContactsAction,\n  getConversationsAction,\n  changeConversationAction,\n  addMessageToConversationAction,\n}) => {\n  const [activeTab, setActiveTab] = useState('messages');\n  const [messageInput, setMessageInput] = useState('');\n  const scrollBarRef = useRef(null);\n  useEffect(() => {\n    document.body.classList.add('no-footer');\n    const currentUserId = 0;\n    getContactsAction();\n    getConversationsAction(currentUserId);\n\n    return () => {\n      document.body.classList.remove('no-footer');\n    };\n  }, [getContactsAction, getConversationsAction]);\n\n  const focusScrollBottom = () => {\n    setTimeout(() => {\n      if (scrollBarRef.current) {\n        scrollBarRef.current._ps.element.scrollTop =\n          scrollBarRef.current._ps.contentHeight;\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    if (loadingConversations && loadingContacts && selectedUser == null) {\n      changeConversationAction(selectedUserId);\n      focusScrollBottom();\n    }\n  }, [\n    changeConversationAction,\n    loadingContacts,\n    loadingConversations,\n    selectedUser,\n    selectedUserId,\n  ]);\n\n  useEffect(() => {\n    focusScrollBottom();\n  }, [selectedUserId]);\n\n  const handleChatInputPress = (e) => {\n    if (e.key === 'Enter') {\n      if (messageInput.length > 0) {\n        addMessageToConversationAction(\n          currentUser.id,\n          selectedUser.id,\n          messageInput,\n          conversations\n        );\n        setMessageInput('');\n        setActiveTab('messages');\n        focusScrollBottom();\n      }\n    }\n  };\n\n  const handleSendButtonClick = () => {\n    if (messageInput.length > 0) {\n      addMessageToConversationAction(\n        currentUser.id,\n        selectedUser.id,\n        messageInput,\n        conversations\n      );\n      setMessageInput('');\n      setActiveTab('messages');\n      focusScrollBottom();\n    }\n  };\n\n  const { messages } = intl;\n\n  const selectedConversation =\n    loadingConversations && loadingContacts && selectedUser\n      ? conversations.find(\n          (x) =>\n            x.users.includes(currentUser.id) &&\n            x.users.includes(selectedUser.id)\n        )\n      : null;\n\n  return loadingConversations && loadingContacts ? (\n    <>\n      <Row className=\"app-row\">\n        <Colxx xxs=\"12\" className=\"chat-app\">\n          {loadingConversations && selectedUser && (\n            <ChatHeading\n              name={selectedUser.name}\n              thumb={selectedUser.thumb}\n              lastSeenDate={selectedUser.lastSeenDate}\n            />\n          )}\n\n          {selectedConversation && (\n            <PerfectScrollbar\n              ref={scrollBarRef}\n              // containerRef={(ref) => {}}\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              {selectedConversation.messages.map((item, index) => {\n                const sender = allContacts.find((x) => x.id === item.sender);\n                return (\n                  <MessageCard\n                    key={index}\n                    sender={sender}\n                    item={item}\n                    currentUserid={currentUser.id}\n                  />\n                );\n              })}\n            </PerfectScrollbar>\n          )}\n        </Colxx>\n      </Row>\n      <SaySomething\n        placeholder={messages['chat.saysomething']}\n        messageInput={messageInput}\n        handleChatInputPress={handleChatInputPress}\n        handleChatInputChange={(e) => {\n          setMessageInput(e.target.value);\n        }}\n        handleSendButtonClick={handleSendButtonClick}\n      />\n      <ChatApplicationMenu activeTab={activeTab} toggleAppMenu={setActiveTab} />\n    </>\n  ) : (\n    <div className=\"loading\" />\n  );\n};\n\nconst mapStateToProps = ({ chatApp }) => {\n  const {\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n    selectedUser,\n    selectedUserId,\n  } = chatApp;\n\n  return {\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n    selectedUser,\n    selectedUserId,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getContactsAction: getContacts,\n    getConversationsAction: getConversations,\n    changeConversationAction: changeConversation,\n    addMessageToConversationAction: addMessageToConversation,\n  })(ChatApp)\n);\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'reactstrap';\n\nconst ApplicationMenu = ({ children }) => {\n  const containerRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleDocumentClick = (e) => {\n    if (isOpen) {\n      const container = containerRef.current;\n      if (container.contains(e.target) || container === e.target) {\n        return;\n      }\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    ['click', 'touchstart'].forEach((event) =>\n      document.addEventListener(event, handleDocumentClick, false)\n    );\n\n    return () => {\n      ['click', 'touchstart'].forEach((event) =>\n        document.removeEventListener(event, handleDocumentClick, false)\n      );\n    };\n  }, [isOpen]);\n\n  return (\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\n      {children}\n      <NavLink\n        className=\"app-menu-button d-inline-block d-xl-none\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <i className=\"simple-icon-options\" />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default ApplicationMenu;\n"],"sourceRoot":""}