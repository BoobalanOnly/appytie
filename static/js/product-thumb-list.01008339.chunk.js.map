{"version":3,"sources":["components/common/CustomSelectInput.js","containers/pages/Pagination.js","containers/pages/ListPageHeading.js","containers/pages/AddNewModal.js","hooks/use-mousetrap.js","containers/pages/ContextMenuContainer.js","containers/pages/DataListView.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/ListPageListing.js","views/app/pages/product/thumb-list.js","containers/navs/Breadcrumb.js"],"names":["CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","className","onClick","map","injectIntl","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","match","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","heading","useState","dropdownSplitOpen","setDropdownSplitOpen","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","id","color","size","isOpen","toggle","type","checked","onChange","label","caret","right","href","order","index","column","name","placeholder","onKeyPress","e","AddNewModal","modalOpen","categories","wrapClassName","backdrop","components","classNamePrefix","options","outline","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","bind","evt","combo","preventDefault","unbind","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","data","action","DataListView","product","isSelect","collect","onCheckItem","Card","event","classnames","active","to","title","category","date","Badge","statusColor","pill","status","CustomInput","React","memo","ImageListView","sm","lg","xl","CardImg","top","alt","src","img","CardBody","Row","CardSubtitle","CardText","ThumbListView","ListPageListing","items","selectedItems","includes","getIndex","value","arr","prop","length","apiUrl","servicePath","key","ThumbListPages","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","setSelectedItems","setItems","lastChecked","setLastChecked","a","axios","get","then","res","x","replace","totalItem","fetchData","isToggle","document","activeElement","blur","useMousetrap","find","target","toLowerCase","tagName","parentElement","selectedList","filter","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","console","log","clickedProductId","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","substr","paths","indexOf","BreadcrumbContainer"],"mappings":"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","file":"static/js/product-thumb-list.01008339.chunk.js","sourcesContent":["import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../components/svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button>\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../components/common/CustomSelectInput';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"pages.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"pages.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"ON HOLD\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"PROCESSED\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"pages.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.id)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from '../../../../constants/defaultValues';\n\nimport ListPageHeading from '../../../../containers/pages/ListPageHeading';\nimport AddNewModal from '../../../../containers/pages/AddNewModal';\nimport ListPageListing from '../../../../containers/pages/ListPageListing';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(\n            data.data.map((x) => {\n              return { ...x, img: x.img.replace('img/', 'img/products/') };\n            })\n          );\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.thumb-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}