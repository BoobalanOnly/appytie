{"version":3,"sources":["../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","views/app/menu/types.js","containers/navs/Breadcrumb.js"],"names":["propTypes","tag","tagPropType","listTag","className","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","active","bool","BreadcrumbItem","undefined","connect","menu","containerClassnames","subHiddenBreakpoint","menuHiddenBreakpoint","menuClickCount","selectedMenuHasSubItems","setContainerClassnamesAction","setContainerClassnames","match","changeDefaultMenuType","e","preventDefault","nextClasses","split","filter","x","windowWidth","window","innerWidth","push","includes","getMenuClassesForResize","join","xxs","heading","outline","color","onClick","id","getMenuTitle","sub","adminRoot","getUrl","path","BreadcrumbItems","substr","paths","length","indexOf","map","index","to","BreadcrumbContainer"],"mappings":"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","file":"static/js/menu-types.81bdeec1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Button } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\n\nimport { setContainerClassnames } from '../../../redux/actions';\nimport IntlMessages from '../../../helpers/IntlMessages';\n\nconst MenuTypes = ({\n  match,\n  subHiddenBreakpoint,\n  menuHiddenBreakpoint,\n  selectedMenuHasSubItems,\n  setContainerClassnamesAction,\n}) => {\n  const getMenuClassesForResize = (classes) => {\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\n    const windowWidth = window.innerWidth;\n    if (windowWidth < menuHiddenBreakpoint) {\n      nextClasses.push('menu-mobile');\n    } else if (windowWidth < subHiddenBreakpoint) {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        !nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses.push('menu-sub-hidden');\n      }\n    } else {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\n      }\n    }\n    return nextClasses;\n  };\n\n  const changeDefaultMenuType = (e, classes) => {\n    e.preventDefault();\n    const nextClasses = getMenuClassesForResize(classes);\n\n    setContainerClassnamesAction(\n      0,\n      nextClasses.join(' '),\n      selectedMenuHasSubItems\n    );\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.types\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Button\n            outline\n            color=\"primary\"\n            className=\"mb-2\"\n            onClick={(e) => changeDefaultMenuType(e, 'menu-default')}\n          >\n            <IntlMessages id=\"menu.default\" />\n          </Button>{' '}\n          <Button\n            outline\n            color=\"primary\"\n            className=\"mb-2\"\n            onClick={(e) => changeDefaultMenuType(e, 'menu-sub-hidden')}\n          >\n            <IntlMessages id=\"menu.subhidden\" />\n          </Button>{' '}\n          <Button\n            outline\n            color=\"primary\"\n            className=\"mb-2\"\n            onClick={(e) => changeDefaultMenuType(e, 'menu-hidden')}\n          >\n            <IntlMessages id=\"menu.hidden\" />\n          </Button>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nconst mapStateToProps = ({ menu }) => {\n  const {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n  } = menu;\n  return {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setContainerClassnamesAction: setContainerClassnames,\n})(MenuTypes);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}